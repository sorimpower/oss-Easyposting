<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[lancers's Blog]]></title>
			<link>http://blog.naver.com/saltynut</link>
			
				<image>
					<url><![CDATA[http://blogpfthumb.phinf.naver.net/20130703_180/saltynut_13728113242604TepQ_JPEG/20130612_194838.jpg?type=m2]]></url>
					<title><![CDATA[lancers's Blog]]></title>
					<link>http://blog.naver.com/saltynut</link>
				</image>
			
			<description><![CDATA[Platform Architect, API Designer]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Fri, 26 Sep 2014 17:43:05 +0900</pubDate>

			
				<item>
					<author>saltynut</author>
					<category><![CDATA[API/Platform]]></category>
					<title><![CDATA[API 테스트 도구 : RunScope Radar]]></title>
					<link>http://blog.naver.com/saltynut/220070831052</link>
					<guid>http://blog.naver.com/saltynut/220070831052</guid>
					<description><![CDATA[API 테스트가 왜 필요한가?API를 개발하든, API를 서비스하든, API를 사용하든.. API에 대한 테스트는 반드시 필요한 항목이다.API 자체가 고정되어 있다면 좋겠지만, 실제로 이런저런 변경이 발생할 수 밖에 없기 때문이다.예를 들어, API의 스펙이 변경될수도 있고, API의 구현체가 변경될수도 있으며, API가 deprecated될 수도 있다.또한 API를 서비스하는 서버나 네트워크의 구성이 변경될수도 있고, API Gateway 단에서의 변경이 일어날 수도 있다.API를 제공/서비스하는 입장에서는 변경에 대한 Regression 테스트를 수행해야 하고, API의 변경으로 인해 API를 사용하는 서비스나 앱이 장애를 겪지 않게 해야 한다. 만약 불가피한 Breaking.......]]></description>
					<pubDate>Thu, 24 Jul 2014 21:43:32 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,API,API테스트,RunScope,Radar]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[API/Platform]]></category>
					<title><![CDATA[Microsoft Azure API Management Service]]></title>
					<link>http://blog.naver.com/saltynut/220000650733</link>
					<guid>http://blog.naver.com/saltynut/220000650733</guid>
					<description><![CDATA[어제 TechEd 2014에서 Azure가 대대적으로 업데이트되었습니다.http://weblogs.asp.net/scottgu/archive/2014/05/12/azure-vm-security-extensions-expressroute-ga-reserved-ips-internal-load-balancing-multi-site-to-site-vpns-storage-import-export-ga-new-smb-file-service-api-management-hybrid-connection-service-redis-cache-remote-apps-and-more.aspx여러가지 많은 내용이 있긴 하지만, 이 중에서 눈에 띄는 항목이 API Management Service입니다.API Management 솔루션을 제공하는 주요 벤더로는 Layer7, Apigee, Mashery, WSO2 등이 있는데, 최근 Cloud Computing의 추세 상 점점 Public Cloud에서 실행할 수 있도록 제공하는 경.......]]></description>
					<pubDate>Thu, 15 May 2014 20:19:28 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,AzureAPIManagement,Apigee,Api]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[ALM/VSTS/TFS]]></category>
					<title><![CDATA[Visual Studio Load Test 유저의 nGrinder 사용기 - #2]]></title>
					<link>http://blog.naver.com/saltynut/120213143951</link>
					<guid>http://blog.naver.com/saltynut/120213143951</guid>
					<description><![CDATA[이전 글 :Visual Studio Load Test 유저의 nGrinder 사용기 - #1nGrinder의 테스트 실행을 위한 구성(Test Configuration)은 다음과 같다.대충 그림을 보면 어떤 값들을 설정 가능한지 한 눈에 들어온다.장점이라고 한다면, Configuration이 매우 간단하고 직관적이라고 할 수 있다.단점이라고 한다면, 설정 가능한 값은 이게 전부이기 때문에 나머지는 Configuration이 아닌 코드로 제어해야 한다는 것이다. 아래에서 '할 수 없다'라고 씌여진 항목은 코드로 작업을 한다면 어떻게든 가능하긴 가능하리라 보는 항목들이다.Agent는 해당 테스트에 참여시킬 Agent의 개수만을 제어할 수 있으며, 특정 Agent를 참여/제외시킬 수는 없다.Agent당 Vus.......]]></description>
					<pubDate>Mon, 12 May 2014 20:35:39 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,nGrinder]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[ALM/VSTS/TFS]]></category>
					<title><![CDATA[Visual Studio Load Test 유저의 nGrinder 사용기 - #1]]></title>
					<link>http://blog.naver.com/saltynut/120212949638</link>
					<guid>http://blog.naver.com/saltynut/120212949638</guid>
					<description><![CDATA[작년 KGC 2013에서 강의를 하기도 했지만, 나는 Visual Studio Load Test를 오랜 시간에 걸쳐서 사용해왔다.보통은 Web Recorder를 활용한 Web Test를 사용하는 것이 일반적이겠지만, 내 경우는 어찌하다 보니 Unit Test 기반으로 구성을 한 경험이 대부분이다.부하테스트 쪽도 역시 좋은 경험이긴 하지만, 나의 주 업무 영역은 아니다.Software Test Engineer의 영역이 아직도 명확하게 정립되지 않은 우리나라에서는 사실 테스트 공학 쪽을 전문화하기가 쉽지 않은 면이 있다.VS Load Test 외에 써본 것은 LoadRunner를 잠깐, JMeter를 몇 번 써 본 적이 있다. 과거의 경험상 간단한 소견을 남긴다면, 기능적으로는 LoadRunner가 분명히 좋긴 하.......]]></description>
					<pubDate>Fri, 09 May 2014 18:43:35 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,부하테스트,nGrinder,VisualStudioLoadTest,VisualStudioOnline]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Tech Stories]]></category>
					<title><![CDATA[Polyglot의 시대 : Edge.js]]></title>
					<link>http://blog.naver.com/saltynut/120212870152</link>
					<guid>http://blog.naver.com/saltynut/120212870152</guid>
					<description><![CDATA[예전 개발자들로부터 많이 받았던 질문 중 하나가 "뭐를 공부하면 오래 써먹을 수 있을까요?" 혹은 "뭐를 공부하면 취업이 잘될까요?"라는 것이었다.아아, 예전에는 분명히 그런 시절이 있긴 했던 것 같다.90년대는 C/C++, Clipper/FoxPro, RAD Tool(Visual Basic, Delphi, PowerBuilder) 중 하나를 하면 되었다.90년대말~2000년대 초반은 웹 쪽에서 ASP가 짱 먹던 시절이었고.2000년대는 ASP/PHP, Java/.NET, Oracle/SQLServer가 득세한 시절인 것 같다.대부분의 사람들은 하나로 통일해서 모든 것을 처리하는 것을 선호한다. 그래서 '대세'가 무엇인지를 파악한 후, 이를 따르려고 노력한다(기업이나 개발자 개인이나 둘 다 마찬가지로).특히 국.......]]></description>
					<pubDate>Thu, 08 May 2014 15:37:22 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Edge.js,Node.js,Polyglot]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[API/Platform]]></category>
					<title><![CDATA[API Granularity 문제 #2]]></title>
					<link>http://blog.naver.com/saltynut/120211621879</link>
					<guid>http://blog.naver.com/saltynut/120211621879</guid>
					<description><![CDATA[이전 글(API Granularity 문제 #1)을 읽어보기를 권장하지만, 귀찮은 분들을 위해 한 줄로 요약한다면, 'REST API tends to be chatty' 라고 할 수 있다.조금 풀어서 쓴다면, REST API가 Fine-Grain해질수록 API Consumer가 API를 호출해야 하는 빈도수가 늘어난다는 것이다.Consumer 입장에서 원하는 해결방법은 간단하다. 호출해야 하는 API의 개수를 줄여주는 것, 궁극적으로 1개만 호출하면 되게 만들어주는 것이다.이 문제는 Consumer의 입장에서 바라봐야 하는 것이기 때문에, Provider의 입장에서는 별다른 해결책이 나오지 않는다.API Granularity 문제 #1에서도 가정했었지만, 각기 다른 API Provider라면 더더욱 Provider 레벨에서의 해.......]]></description>
					<pubDate>Thu, 17 Apr 2014 20:13:50 +0900</pubDate>
					<tag><![CDATA[API,Composition,Orchestration,Aggregation,APIGateway,Netflix]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[API/Platform]]></category>
					<title><![CDATA[API Granularity 문제 #1]]></title>
					<link>http://blog.naver.com/saltynut/120210979446</link>
					<guid>http://blog.naver.com/saltynut/120210979446</guid>
					<description><![CDATA[오늘 얘기해볼 문제는 API Granularity에 대한 문제이다.Granularity라는 단어는 '입도'라고 번역하는데, 얼마나 세밀하게 나눌 것이냐(Fine-grained), 거칠게 묶을 것이냐(Coarse-grained)를 의미한다.곡식을 갈고 체로 거를 때 얼마나 촘촘하게 할 것이냐에서 유래한 단어로 보면 되겠다.즉, API에서 Granularity는 API를 설마나 잘게 쪼갤 것이냐의 문제가 된다.특히 이 문제는 REST 형태로 API를 제공하는 경우에 더 많이 발생하게 된다.REST는 그 특성상 action/command 단위가 아닌 resource 기반의 URI 계층 구조를 만들 수 밖에 없는데, 자연히 resource를 parent-child 형태로 계속 쪼개 나가야 한다. 그러나, 세상은 단일한 계층 구조.......]]></description>
					<pubDate>Mon, 07 Apr 2014 20:13:09 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,API,Granularity]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[엔지니어로서의 로드맵]]></title>
					<link>http://blog.naver.com/saltynut/120210665822</link>
					<guid>http://blog.naver.com/saltynut/120210665822</guid>
					<description><![CDATA[로드맵이라고 불러야 할지, 커리어 패스(Career Path)라고 할지 모르겠으나... :-)어느덧 적지 않은 나이가 되었기에, 이러한 고민들이 점점 현실적으로 다가왔다.간혹 내게 미래를 상담해오는 사람들이 있긴 한데, 따지고 보면 나도 마찬가지 입장이라...요즘 많이 회자되는 직장과 직업의 차이 얘기도 그렇고, 결과적으로 보면 '나는 뭐하는 사람일까?'라는 질문과 '앞으로 무엇을 하고 싶은가?'에 대한 질문에 대한 답을 찾는 것은 항상 어려운 일이다.20대 초중반의 나는 그냥 C++ 개발자였다. 그 시절 다 그랬듯이 벤처 회사에서 일주일에 한번 집에 가면 감사해했고, 벤처 광풍의 밝은 면과 어두운 면을 모두 경험했다. 남들과 조금 다른 특.......]]></description>
					<pubDate>Wed, 02 Apr 2014 18:29:20 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,로드맵,커리어패스,API]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Tips and Tricks]]></category>
					<title><![CDATA[Fiddler를 사용한 iOS/안드로이드 HTTP 패킷 스니핑]]></title>
					<link>http://blog.naver.com/saltynut/120208940272</link>
					<guid>http://blog.naver.com/saltynut/120208940272</guid>
					<description><![CDATA[웹 개발을 좀 해본 사람들이라면 모를리 없는 HTTP 디버깅 프록시인 Fiddler.밑바닥 네트워크 패킷까지라면 Wireshark을 써야겠지만...요즘 모바일 App들이 많다 보니,여기서도 패킷 스니핑이 필요할 때가 있다. 최근 모바일 App과 서버 간의 연동에서 발생한문제를 분석하게 되었는데, 의외로 Fiddler가 iOS(아이폰, 아이패드)나 안드로이드의 HTTP 패킷 스니핑 용도로도 쓸 수 있다는 것을 모르는 사람들이 많은 듯 하다.자세한 설명은 Fiddler 사이트에 이미 친절하게 존재한다.Configure Fiddler for iOSConfigure Fiddler for Android / Google Nexus 7위의 링크에 있지만, 간단하게 설명하면 이렇다.먼저 Fiddler에서 Allow remote compute.......]]></description>
					<pubDate>Thu, 06 Mar 2014 17:53:18 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Fiddler,HTTP디버깅,패킷스니핑,iOS,아이폰,아이패드,안드로이드]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[API/Platform]]></category>
					<title><![CDATA[API IDL(Interface Definition Language) 디자인 : 초안]]></title>
					<link>http://blog.naver.com/saltynut/120204621588</link>
					<guid>http://blog.naver.com/saltynut/120204621588</guid>
					<description><![CDATA[오래 전부터 고민거리 중 하나로 남았던 것이 API에 대한 명세(specification)을 어떻게 정의할 것이냐였다.API 설계자 입장에서는 API 명세를 디자인해서 개발자에게 넘겨주고, API를 사용할 사람에게 사전에 알려주는 것이 필요하며, 개발이 완료된 후에는 명세대로 구현되었는지를 확인하고, 관련한 문서를 제공하는 것이 필수적으로 요구된다.여기다 API를 개발하고, 사용하며, 테스트하기 위한 skeleton 코드를 자동 생성할 수 있다면 보너스가 된다.조금 혼동해서는 안될 것이 개발을 완료한 후 API에 대한 문서화를 자동화하는 것만을 다루고자 하는 것은 아니다.내가 이러한 형태를 중요하기 여기는 이유는 과거 포스트에 잠깐 언급되었.......]]></description>
					<pubDate>Mon, 30 Dec 2013 21:51:56 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,API,IDL]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[개발자와 영어]]></title>
					<link>http://blog.naver.com/saltynut/120203795663</link>
					<guid>http://blog.naver.com/saltynut/120203795663</guid>
					<description><![CDATA[대부분 영어로 된 기술 자료를 봐야 함에도 불구하고, 개발자들 중에는 영어에 대한 울렁증이 있는 사람들이 많다. 요즘에야 토익을 보는 것이 기본이고, 대학생 때 해외 여행 한번 정도는 경험해보는 것이 당연해졌지만, 내 나이 또래는 문법 위주의 죽은 영어만을 배웠던 세대라... 중학교 때 매일 수업시간에 미국 다녀온 얘기를 자랑하던 영어 선생님이 있었는데, 어느날 여행 중인 외국인이 말이 도저히 안 통해 학교로 찾아왔을 때, 아무리 교내 방송을 해도 숨어서 안 나오시던 웃지 못할 일도 생각 난다.나 역시도 크게 다르지 않다.그나마 조금 낫다면, 대학교 시절학교 다닐 때 같은 하숙집에 미국인이 들어와 같이 놀러 다니면서 외국.......]]></description>
					<pubDate>Tue, 17 Dec 2013 11:27:15 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,개발자,영어]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[DOM을 깨우치다(원제: DOM Enlightenment) 번역 출간]]></title>
					<link>http://blog.naver.com/saltynut/120201604117</link>
					<guid>http://blog.naver.com/saltynut/120201604117</guid>
					<description><![CDATA[올해는 어찌하다 보니 번역을 2권이나 하게 되었습니다. (이전 책 : 제대로 배우는 Node.js 프로그래밍-Learning Node)공교롭게도 둘다자바스트립트와 연관된 책이라는 특징이 있네요. :-)역자의 글에서도 밝혔지만, 저는 웹 프론트 개발을 한지가 사실 오래되었습니다. 제가 웹 프론트 개발을할 때는DOM을 쓰는 게 당연하던 시절이라, 올해 jQuery를 처음 써보면서 세상 참 좋아졌다라는 생각을 했었는데, 항상 추상화된 계층이 나오면 원래 바닥을 모르는 사람들이 나오는 부작용이 있기에 이러한 책이 하나쯤은 존재하는 것도 의미가 있을 것 같습니다.세미나 때도 장황한 PPT보다는 개발자는 코드로 말한다고 생각하고 라이브 코딩은 당연한.......]]></description>
					<pubDate>Mon, 11 Nov 2013 13:04:30 +0900</pubDate>
					<tag><![CDATA[DOM,DocumentObjectModel,DOM을깨우치다,DOMEnlightenment,번역]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Tech Stories]]></category>
					<title><![CDATA[How long does your code live?]]></title>
					<link>http://blog.naver.com/saltynut/120199467507</link>
					<guid>http://blog.naver.com/saltynut/120199467507</guid>
					<description><![CDATA[프로토타이핑이나 PoC(Proof of Concept) 작업을하다 보면,임시로 작성하는 코드가 많아진다. 이러한 코드를 작성하는 이유는 보통 누군가를 설득하거나 의사결정을 내리기 위해, 문서나 대화보다 코드가 더 효율적이라고 판단했기 때문일 것이다. 혹은 자기 스스로 확실하지 않아, 이러한 작업을 통해 문제가 없는지를 검증해보는 과정이기도 할 것이고. 때로는 이 코드를 계속 발전시켜 나가는 경우도 있겠지만, 그 목적을 달성하고 나면 버려지는 경우가 대부분이다.  Agile이라는 명분 하에, 실제로 이런 경우가 가속화되는 경우가 많다. 일단 개떡 같이 구현하더라도 기능을 충족하고, 리팩토링을 하자.. 라는 사고방식인데, 최.......]]></description>
					<pubDate>Mon, 07 Oct 2013 18:46:35 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[세미나 자료]]></category>
					<title><![CDATA[KGC2013 세미나 자료 - Visual Studio를 이용한 게임서비스 부하테스트]]></title>
					<link>http://blog.naver.com/saltynut/120199018703</link>
					<guid>http://blog.naver.com/saltynut/120199018703</guid>
					<description><![CDATA[블로그에선 따로 알리지 않았지만...KGC(Korea Games Conference) 2013에서 'Visual Studio를 이용한 게임서비스 부하테스트"라는 세션을 강의했습니다.http://www.kgconf.com/kor/html/conference_view.html?idx=1806KGC 사이트에도 올라오겠지만, 미리 블로그에 세미나 자료를 올립니다.제목에 Visual Studio라고 붙어 있긴 하지만, 사실 거기에 국한된 내용은 별로 없습니다.도구는 도구일뿐, 부하테스트라는 것 자체에 대해 인식과 저변이 확산되었으면 하는 생각이 있네요.]]></description>
					<pubDate>Mon, 30 Sep 2013 13:34:23 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,KGC2013,부하테스트,LoadTest]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[애플리케이션 배포]]></category>
					<title><![CDATA[배포시스템 배포 모델 설계 1]]></title>
					<link>http://blog.naver.com/saltynut/120198324029</link>
					<guid>http://blog.naver.com/saltynut/120198324029</guid>
					<description><![CDATA[지난 포스트인 배포시스템 아키텍처 설계에서 설계 방향 중 하나로 'Model-Oriented 구조를 사용한다.'고 정의한 바 있다.이는 배포시스템의 동작을 제어하는 것을 명령어 기반이 아닌 선언적 모델(Declarative Model) 기반으로 하겠다는 것을 의미한다.여기에는 모델 기반 접근방법(Model-based Approach)과 DSL을 선호하는 내 개인적인 취향도 반영된 것도 있지만, 사용성과 명확성 입장에서 더 낫다고 판단되었기 때문이다. (응? 결론은 내 맘대로라는 거자나?)배포 모델의 구성요소배포 모델은 말 그대로 배포시스템이 배포라는 작업을 수행하기 위해서 필요한 정보가 담긴 데이터를 의미한다.배포 작업을 수행하기 위해 필요한 정보는 무엇.......]]></description>
					<pubDate>Tue, 17 Sep 2013 15:29:26 +0900</pubDate>
					<tag><![CDATA[배포,배포모델]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[애플리케이션 배포]]></category>
					<title><![CDATA[배포시스템 아키텍처 설계]]></title>
					<link>http://blog.naver.com/saltynut/120197469602</link>
					<guid>http://blog.naver.com/saltynut/120197469602</guid>
					<description><![CDATA[6년 전에 웹 애플리케이션 배포시스템 설계라는 포스트에서 이미 배포시스템은 크게 Push 방식(혹은 Agent-less 방식, 혹은 Remote Command 방식)과 Agent 방식으로 나누어진다는 것에 대해 언급한 적이 있다. 배포든 모니터링이든 n대의 서버를 관리하기 위한 설계 방식은 여기서 크게 벗어나지 않는다. 6년이라는 시간이 지나도 마찬가지이고. 다만, 6년 전 포스트는 아무래도 Windows 환경을 염두에 두고 Robocopy와 공유폴더를 사용하는 것을 기반으로 쓰여지긴 했다. 이 점을 감안하여, Push 방식 및 Agent 방식 대신에, Agent-less 방식과 Agent-based 방식이라는 명칭을 사용하는 것이 좀 더 정확할 것 같다.Agent-less 방식명칭 그대로 배.......]]></description>
					<pubDate>Tue, 03 Sep 2013 14:22:48 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,배포시스템설계,ZooKeeper]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[애플리케이션 배포]]></category>
					<title><![CDATA[배포시스템의 목표 설정]]></title>
					<link>http://blog.naver.com/saltynut/120197162562</link>
					<guid>http://blog.naver.com/saltynut/120197162562</guid>
					<description><![CDATA[시스템을 설계할 때 항상 그렇다시피, 목표로 하는 바가 무엇인지를 설정하는 것에 따라 요구사항과 기능사양은 완전히 달라지기 마련이다. 이번 배포시스템을 개발할 때도목표를 어떻게/어디까지 잡을 것인가가가장중요한 문제였는데, 여기에 대한 얘기를 해보는 것이 향후 이야기를 풀어나가기 위해 적절할 것 같다.배포 자동화대부분의 사람들이 배포시스템에서 기대하는 가장 기본적인 요건은 '배포 자동화(Automated Deployment)'이다.사람이 수작업으로 수행할 경우, 배포할 제품의 개수와 배포 대상이 되는 서버의 개수가 증가하는 것에 비례하여 배포시간이 증가하기 때문에 이를 단축시키고 보다 효율적으로 수행하고 싶어 하기 때문이.......]]></description>
					<pubDate>Thu, 29 Aug 2013 14:33:58 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,배포시스템,애플리케이션배포,CI,CD,ContinousDelivery]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[애플리케이션 배포]]></category>
					<title><![CDATA[새로운 배포시스템을 만들면서..]]></title>
					<link>http://blog.naver.com/saltynut/120196643797</link>
					<guid>http://blog.naver.com/saltynut/120196643797</guid>
					<description><![CDATA[지금으로부터 6년 전인 2007년, 이 블로그에 애플리케이션 배포 및 배포시스템과 관련한 글을 몇 개 끄적거린게 있다.(궁금하신 분들은 이 블로그의 애플리케이션 배포 카테고리를 보면 될 듯...)&#65279;세월이 지났기에 더 추가되고 보완되어야 할 내용들이 있긴 하지만, 지금 봐도 개인적으로 잘 썼다고 생각한다.(자뻑...)당시 배포시스템 구현과 관련된 내용을 더 쓰지 못한 게 다소 아쉬웠다. (뭐, 이렇게 연재하다가 중단한게 한두개인가...)&#65279;6년이 지난 2013년. 올해 새로운 배포시스템을 만들게 되었다.엄밀히 말해 최초 설계는 작년에 했고 작년부터 구현을 시작할 계획이었지만, 보스 및보스의 보스까지는 잘 통과했는데보스의.......]]></description>
					<pubDate>Wed, 21 Aug 2013 11:38:33 +0900</pubDate>
					<tag><![CDATA[배포시스템,애플리케이션배포]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[Learning Node(제대로 배우는 Node.js 프로그래밍) 번역 출간]]></title>
					<link>http://blog.naver.com/saltynut/120191559204</link>
					<guid>http://blog.naver.com/saltynut/120191559204</guid>
					<description><![CDATA[몇달 동안 방치상태였던 블로그에 오랜만에 쓰는 글이 책 선전이네요. -_-;;2008년에 Workflow Foundation을 마지막으로 번역일에서 손을 뗐었는데, 어찌하다 보니 손을 대게 되었습니다.회사 업무에서 Node.js를 다룰 기회가 있어서 한참 살펴보던 도중에, 출판사에서 제안이 들어와서 마침 저도 공부할겸 번역 작업을 했습니다. 물론 용도에 따라서 다르겠지만, Node.js는 검토해볼만한 흥미로운 기술인 것 같습니다.업무의 특성상 Fast Prototyping을 해야 할 경우가 많은데, 특히 웹 API를 제공하는 서버를 뚝딱 만들어내는데는 탁월합니다.(모든 기술이 다 그렇지만 제대로만 짠다면야) Live 서비스를 하는데도 상당히 좋은 성능을 제공하고.......]]></description>
					<pubDate>Fri, 07 Jun 2013 10:56:48 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Node.js]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Etc]]></category>
					<title><![CDATA[IE10 자동 업데이트와 64비트 ActiveX 호환성 문제]]></title>
					<link>http://blog.naver.com/saltynut/120186314893</link>
					<guid>http://blog.naver.com/saltynut/120186314893</guid>
					<description><![CDATA[Windows 8에는 IE10이 기본적으로 탑재되어 있고, 지난달 말 Windows 7 및 Windows Server 2008 R2에 설치가 가능한 IE10이 릴리스되었습니다. 그런데 3월 28일(바로 내일이죠?)부터 Windows 7 SP1 및 Windows Server 2008 R2 SP1 사용자를 대상으로 IE10으로의 자동 업데이트가 진행됩니다.http://www.microsoft.com/ko-kr/ie10autoupdate/default.aspxWin7/2008R2용 IE10이 나온지 얼마 안된 상태에서 진행이 되는데, 덕분에 관련한 문제들을 조사하고 정리해봤습니다.우선 이전 버전의 IE에서 정상적으로 표시되던 웹 사이트가 정상적으로 표시되지 않을 수 있습니다. 이 부분은 힘들긴 하지만.. 나름 IE가 웹 표준을 준수하려고 노력하면서 겪.......]]></description>
					<pubDate>Wed, 27 Mar 2013 19:11:00 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,IE10,64비트,EPM,AppContainer]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Communication]]></category>
					<title><![CDATA[Serialization 사이즈로 볼 때 정말 JSON이 XML보다 작을까?]]></title>
					<link>http://blog.naver.com/saltynut/120181793417</link>
					<guid>http://blog.naver.com/saltynut/120181793417</guid>
					<description><![CDATA[JSON과 XML 간의 비교는 해묵은 얘기이지만, 여전히 자주 등장하는 소재 중 하나이다.JSON과 XML은 엄밀히 말해 동일한 선상에 놓고 비교할 대상은 아니다. 서로가 목표로 한 바에 차이가 있기 때문이다.하지만 데이터 저장 혹은 전송 포맷이라는 용도로 한정해볼때 이 둘은 고려대상이 되고, 원하는 요구사항과 시나리오에 따라 둘 중 하나가 선택될 수 있기에 비교 대상이 된다. (JSON과 XML의 장단점에 대해서는 인터넷을 열심히 찾아보기 바란다.)대부분 사람들이 생각하기에 JSON은 XML에 비해 가볍다(Lightweight)고 한다.'가볍다'라는 단어는 실제로는 많은 의미를 내포하고 있다.사용하기 간편하다, 데이터사이즈가 작다, 파싱 속도가 더.......]]></description>
					<pubDate>Mon, 18 Feb 2013 20:03:54 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,JSON,XML,Serialization,BinaryXML,EXI]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Architecture/Guide]]></category>
					<title><![CDATA[.NET Architecture Case Study #1 - Part 3]]></title>
					<link>http://blog.naver.com/saltynut/120170255527</link>
					<guid>http://blog.naver.com/saltynut/120170255527</guid>
					<description><![CDATA[초기에 제안된 아키텍처나 기술 Stack을 대략 한 장에 요약해서 그리자면 다음과 같다. 약간 성격이 다른 항목들도 있긴 하지만, 그냥 한 장에 집어 넣다 보니 이런 그림이 되었다는 것을 양해해주기 바란다.
  (이 그림은 재개발 영역에 해당하는 것이며, Refactoring 영역에 해당하는 영역은 이 중 일부만 적용되었다.) 
  
아래 내용은 클라이언트와 서버 각각에 대한 주요 기술 Stack 등에 대한 설명이며, 왜 이러한 기술을 택했는지에 대한 간략한 설명이다.  클라이언트(좌측 상단)
   WPF
  무엇보다 UI 기술로 선정한 것은 WPF(Windows Presentation Foundation)이다. WinForm에 비해 최신 기술이라는 뻔한 얘기 외에, 해당 프로젝트에.......]]></description>
					<pubDate>Thu, 04 Oct 2012 22:58:47 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Architecture/Guide]]></category>
					<title><![CDATA[.NET Architecture Case Study #1 - Part2]]></title>
					<link>http://blog.naver.com/saltynut/120169141731</link>
					<guid>http://blog.naver.com/saltynut/120169141731</guid>
					<description><![CDATA[개선방향
  기존 시스템이 존재하는 상황에서 항상 To Be의 대전제는 크게 둘로 나뉘어진다. 기존 것과 완전 별개로 새로 구축하거나, 기존 시스템을 Refactoring 하면서 일부를 재개발하거나.
전체 시스템을 재개발한다는 것은 어마어마한 노력이 필요한 상황이라 이 프로젝트에서 방향은 자연스럽게 후자로 결정되었다. 그리하여 A/B/C/D/공통 중 A/C/D/공통은 Refactoring으로, B에 해당하는 부분은 대부분을 재개발하기로 결정하였다. 분석 내용을 바탕으로 개선방향은 크게 다음과 같이 정의되었다. Refactoring 영역(A/C/D/공통)
  전체 모듈의 개수를 줄인다. 실제로 모듈 내 Type이 5개 이하인 경우가 꽤 있었고, 심지어 모듈 내에 Typ.......]]></description>
					<pubDate>Wed, 19 Sep 2012 12:31:02 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Architecture/Guide]]></category>
					<title><![CDATA[.NET Architecture Case Study #1 - Part 1]]></title>
					<link>http://blog.naver.com/saltynut/120168527432</link>
					<guid>http://blog.naver.com/saltynut/120168527432</guid>
					<description><![CDATA[State of the art/Best of breed Architecture라는 글을 쓴 후, 두리뭉실한 것 말고 좀 더 상세한 내용을 제시해볼 필요가 있지 않을까라는 생각이 들었다. 상세한 내용을 말하는 데는 실제 사례, 즉 case study가 가장 적합할 것이다. 항상 이상과 실제는 틀릴 수 있다. 처음에는 이상적이라고 생각했던 아키텍처나 패턴이 막상 실제 적용을 하다 보면 많은 문제를 야기하는 경우가 많다.여기서 소개되는 Case Study들은 실제 내 경험담을 반영하였다. 최대한 고객의 비즈니스와 관련된 사항은 배제하도록 노력하였지만 해당 고객사의 사람들이 보면 '아, 우리 이야기구나'라고 알 수 있을 것이라 생각하고, 이의를 제기하면 부득이 내용을 수정.......]]></description>
					<pubDate>Tue, 11 Sep 2012 19:43:20 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Architecture/Guide]]></category>
					<title><![CDATA[State of the art / Best of breed Architecture]]></title>
					<link>http://blog.naver.com/saltynut/120168454971</link>
					<guid>http://blog.naver.com/saltynut/120168454971</guid>
					<description><![CDATA[State of the art는 최첨단, Best of breed는 동종 최고를 지칭하는 단어이다. 몇 년 전까지만 하더라도 Microsoft의 해외 컨퍼런스(PDC, TechEd 등) 세션에서 특정 기술을 소개할 때 자주 등장하던 단어였는데, 흥미롭게도 최근에 이런 단어를 본 적이 좀 오래된 것 같다. 
그런데, 갑자기 문득 Microsoft 기술을 기반으로 할 때 최첨단이자, 최적의 아키텍처가 무엇인지 궁금해졌다. 아키텍처라는 단어의 범위가 너무 광범위하므로, 여기서는 Application Architecture 혹은 Technology Stack 정도로 범위를 한정하고자 한다. 또한, Windows Azure와 같이 Cloud를 사용하는 경우는 고려하지 않았다. 예전처럼 Microsoft 기술을 열심히 들여다 보.......]]></description>
					<pubDate>Mon, 10 Sep 2012 21:32:44 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Visual Studio]]></category>
					<title><![CDATA[Visual Studio와의 15년, 비판과 바램]]></title>
					<link>http://blog.naver.com/saltynut/120164126907</link>
					<guid>http://blog.naver.com/saltynut/120164126907</guid>
					<description><![CDATA[Microsoft의 개발 플랫폼이라고 하면 가장 먼저 떠올리는 것 중 하나가 Visual Studio일 것이다. 타 플랫폼에서도 Microsoft 개발 플랫폼으로 가장 부러워 했던 것 중 하나가 Visual Studio라는 막강한 개발도구이고, 지금도 여전히 Visual Studio는 현존하는 가장 막강한 IDE 중 하나이다.Visual Studio는 최초 릴리스인 97을 시작으로, 6.0, 2002, 2003, 2005, 2008, 2010을 거쳐 곧 2012를 앞두고 있다. 지난 15년 동안 나는 이 모든 버전들을 사용해봤다. 실제로 Microsoft 개발 도구를 사용한 것은 MS-C 6.0(VC++ 6.0이 아님)부터였고, 학생 시절이었음에도 불구하고 VS 97을 정품으로 구매한 이후 지금까지 계속 정품을 사용하고 있는 착실.......]]></description>
					<pubDate>Mon, 16 Jul 2012 19:04:20 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[Microsoft MVP 생활을 마감하며]]></title>
					<link>http://blog.naver.com/saltynut/120163062441</link>
					<guid>http://blog.naver.com/saltynut/120163062441</guid>
					<description><![CDATA[지난 6월 30일자로 Microsoft MVP 생활을 마감했습니다.정확히 말하면 Renewal에 떨어졌습니다.Activity의 양적인 측면으로 평가하는 것이기 때문에 저처럼 한 게 없는 사람은 떨어지는 것이 맞지요. 그래서 애초에 Renewal 지원을 안하고 싶기도 했었는데 말이죠....2002년이었던가.. Asia MVP로 처음 시작해서 Global MVP로 승격된 후, 잠깐 몇개월 공백이 있었던 것 빼고는 거의 10년 가량을 유지해온 것이다 보니, 시원섭섭한 기분이 많이 듭니다. 저의 젊은 시절(?)을 함께 해준 또 하나와 멀어진다는 기분이 들다 보니, 새삼스레 나이를 먹어가는 것 같기도 하고 이제는 뭔가 새로운 방향을 모색해볼 때가 된 것 같기도 하고..흥미롭게도 M.......]]></description>
					<pubDate>Mon, 02 Jul 2012 09:24:15 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,MicrosoftMVP]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[Windows 8 Mini Concert 후기]]></title>
					<link>http://blog.naver.com/saltynut/120160244701</link>
					<guid>http://blog.naver.com/saltynut/120160244701</guid>
					<description><![CDATA[어제 오후 Windows 8 Mini Concert 행사가 있어서 갔다 왔다.
  한국 Microsoft에서 오랜만에 하는 대규모의 오프라인 행사이기도 하고, 스티브 발머가 오랜만에 방한한 것이기도 하고, 겸사겸사해서 참석을 했다. 생각보다 참석자는 많았고, Microsoft의 요즘 현실에 대한 이런저런 얘기들이 많지만, 그래도 Windows 8에 대한 관심은 많다는 것을 의미한다고 본다.
나 역시 Windows 8 Consumer Preview를 현재 회사 PC에 설치해서 메인 OS로 몇 달 째 사용하고 있으며, Visual Studio 11 Beta 역시 설치해서 계속 사용을 해보고 있다. 그만큼 나도 Windows 8에 대한 관심이 있으며, 최소한 어느 정도는 안다고 할 수 있겠다. 요즘 한국 Mic.......]]></description>
					<pubDate>Wed, 23 May 2012 15:04:55 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Windows8]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Visual Studio]]></category>
					<title><![CDATA[Python Tools for Visual Studio]]></title>
					<link>http://blog.naver.com/saltynut/120154885543</link>
					<guid>http://blog.naver.com/saltynut/120154885543</guid>
					<description><![CDATA[거의 최근 10년간 C#만 만져오다가(가끔 VB.NET이나 C++을 만지기도 했지만), 요즘은 이런저런 다른 프로그래밍 언어들도 살펴보게 되는 경우가 많습니다. 그 중에서도 요즘 가장 많이 사용하게 되는 언어가 Python입니다. Python만 놓고 볼 때 저는 아직 초보 수준입니다만, 개인적으로는 Python이 딱히 좋은지는 잘 모르겠습니다. Prototyping 용으로 사용하고 있긴 한데, Fast-Prototyping 목적이라면 제게는 C# + LinqPad 조합이 더 편리하고 빨리 할 수 있기에 별다른 매력을 못 느끼겠더군요. (사실 Prototyping 목적으로 Visual Studio를 안 쓴지는 꽤 오래되었습니다.) 처음 Python을 접하면서 3.2 버전을 설치했는데, 3.2이 2.7에 대.......]]></description>
					<pubDate>Mon, 12 Mar 2012 20:45:54 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Visual Studio]]></category>
					<title><![CDATA[VS11 - PowerPoint Storyboarding]]></title>
					<link>http://blog.naver.com/saltynut/120154131314</link>
					<guid>http://blog.naver.com/saltynut/120154131314</guid>
					<description><![CDATA[이런저런 상황 상 코드를 작성하기 보다는 문서를 작성하는데 시간을 많이 보내게 되다 보니, Visual Studio 11 &amp; .NET 4.5 Beta 릴리스에서 소개한 것처럼 PowerPoint Storyboarding add-in이 문득 궁금해졌습니다. 사실 제가 UI 기획을 하는 것이 아니므로, 스토리보드를 만들 일은 없겠지만요.
  
Visual Studio 11의 ALM(Application Lifecycle Management)는 개발자, 테스터, 프로젝트 관리자 외에 프로젝트의 이해관계자(Stakeholder)와 고객(Customer)를 Role 중 하나로 참여시키고 있습니다. 이는 원래 VS2005에서 처음 ALM을 시도한 이래, VS2008에서 얘기되었던 Microsoft의 ALM에 대한 비전을 VS11에서 드디어 완성했다는데 큰 의.......]]></description>
					<pubDate>Fri, 02 Mar 2012 22:24:19 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Visual Studio]]></category>
					<title><![CDATA[VS11 - First Look & WPF Designer]]></title>
					<link>http://blog.naver.com/saltynut/120154127906</link>
					<guid>http://blog.naver.com/saltynut/120154127906</guid>
					<description><![CDATA[오늘 Visual Studio 11을 잠시 만져봤습니다. 일단 전반적인 기분은 지난번 버전보다 가볍다는 생각이 듭니다. UI에 있어서는 다른 것은 그럭저럭 괜찮은데, 역시 예상했던 흑백 아이콘은 전혀 적응이 안됩니다. 알아보기가 너무 어렵네요. (아이콘 색깔을 돌려주세요!)
  
WPF 프로젝트를 한번 생성해봤습니다. WPF로 개발하시는 분들은 아래 그림을 잘 보세요.
그 동안 외면 받던 WPF 디자이너가 획기적으로 개선되었습니다. Blend의 기능들이 대부분 Visual Studio 안으로 들어왔습니다. 왼쪽 아래의 DOCUMENT OUTLINE을 보시면 Blend의 Show/Hide용 눈깔이 보이고, 오른쪽 아래의 PROPERTIES를 보면 역시 Blend와 같은 Property 창을 지.......]]></description>
					<pubDate>Fri, 02 Mar 2012 21:40:39 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,VisualStudio11,VS11,WPF디자이너]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Visual Studio]]></category>
					<title><![CDATA[Visual Studio 11 & .NET 4.5 Beta 릴리스]]></title>
					<link>http://blog.naver.com/saltynut/120153984417</link>
					<guid>http://blog.naver.com/saltynut/120153984417</guid>
					<description><![CDATA[몇 시간 전에 Visual Studio 11 및 .NET 4.5 Beta가 릴리스 되었습니다.
  늘상 그렇듯이 MSDN 구독자는 MSDN Subscriptions에서 다운로드 받으시면 되고,
아니신 분들은 http://www.microsoft.com/visualstudio/11 에서 받으시면 됩니다.
   (대신 이 경우는 Web Installer만 가능하고요.) 상세한 설명은 Jason Zanders의 Welcome to the Beta of Visual Studio 11 and .NET Framework 4.5를 보시면 되겠습니다.
   간단하게 요약해보자면…
Windows 8 application 개발 지원
   IDE
   지난번 포스트에서 설명 드린 것처럼 일단 UI 디자인이 변경되고 Productivity Tool의 기능들이 통합됨
    C++ 관련 지원 강화
     Code Snipp.......]]></description>
					<pubDate>Thu, 01 Mar 2012 03:00:50 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,VisualStudio11,VS11,.NET4.5]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Architecture/Guide]]></category>
					<title><![CDATA[Framework Story #2]]></title>
					<link>http://blog.naver.com/saltynut/120153810277</link>
					<guid>http://blog.naver.com/saltynut/120153810277</guid>
					<description><![CDATA[Prototype
  MyWebService.NET 이후 우리는 실제 프로젝트에서 유사한 문제들을 겪게 된다.
닷넷 초창기에 프로젝트의 대부분은 ASP.NET과 관련된 항목이 많았다. 당시 기존 웹에서 가장 일반적인 형태는 ASP로 구현된 2 Layer 아키텍처였다. 대부분은 별도의 비즈니스 로직 컴포넌트를 가지지 않고, ASP 페이지 내에서 DB를 직접 호출하는 형태가 대부분이었다. 이러한 상황에서 ASP.NET의 도입이라는 것은 기존 개발자(특히 웹 개발자)에게 많은 스트레스를 한꺼번에 강요했다. ASP.NET이라는 웹 기술 이외에도 개발자는 .NET Framework라는 것을 이해해야 하고, BCL을 사용하는 법을 배워야 하며, C#(또는 VB.NET)이라는 새로운 프로그래.......]]></description>
					<pubDate>Tue, 28 Feb 2012 12:43:30 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Framework,프레임워크]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Architecture/Guide]]></category>
					<title><![CDATA[Framework Story #1]]></title>
					<link>http://blog.naver.com/saltynut/120153768307</link>
					<guid>http://blog.naver.com/saltynut/120153768307</guid>
					<description><![CDATA[프레임워크(Framework). 내 경력의 많은 부분에는 이 단어가 따라 다닌다.
기술 Set 중 하나로 .NET Framework가 있기도 하고, 업무 경력으로 표준화나 프레임워크 구축이 있기도 하고..
그런데, 지난 10여년의 대부분을 프레임워크와 관련한 곳에 할애했음에도 불구하고, 정작 프레임워크에 대한 내 견해를 이야기 해 본 적은 별로 없다는 생각이 들었다. (과거 회사 내부나 회사에서 물건 팔러 다닐 때 빼고는…)
솔직히 말하면 유경상 수석이 쓴 개발 프레임워크에 대하여라는 글에서 자극을 받기도 했다. 그리하여 오랜 고민 끝에 프레임워크에 대한 내 생각과 이야기들을 한 번 적어보기로 했다. 하지만 이런 글을 쓴다고 해서 유경상.......]]></description>
					<pubDate>Mon, 27 Feb 2012 21:14:33 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Framework,프레임워크]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Visual Studio]]></category>
					<title><![CDATA[Visual Studio 11 & .NET 4.5 Beta]]></title>
					<link>http://blog.naver.com/saltynut/120153703896</link>
					<guid>http://blog.naver.com/saltynut/120153703896</guid>
					<description><![CDATA[2월 29일에 Visual Studio 11 및 .NET 4.5 Beta가 나온다고 합니다.
Visual Studio는 보통 Microsoft 내부적으로 Dev라는 명칭으로 부릅니다. Visual Studio 2010은 Dev10이었고, 다음 버전은 Dev11이었던 셈인데, Visual Studio 제품명도 결국 연도를 붙이던 것에서 다시 버전 이름으로 돌아가 버렸습니다. 그래서 Visual Studio 2012가 아닌 Visual Studio 11이 정식 명칭이 되었나 봅니다. 아래는 VS11의 스크린샷입니다. 어떤 생각이 드시나요?   
Visual Studio 블로그에 가보면 요즘 Introducing New Developer Experience라는 시리즈로 포스트가 나오고 있는데, 솔직히 뭐랄까.. 좀 그렇습니다. 뭔가 쓸데없는데 시간 낭비를 하고 있는.......]]></description>
					<pubDate>Mon, 27 Feb 2012 10:25:38 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[근황 + 티저 광고(?)]]></title>
					<link>http://blog.naver.com/saltynut/120153500962</link>
					<guid>http://blog.naver.com/saltynut/120153500962</guid>
					<description><![CDATA[꽤 오랫동안 블로그를 내버려뒀습니다.몇가지 개인사나 세미나 관련 얘기를 빼고는 제대로 된 포스트를 쓴 적이 없었습니다.간단히 말해, 참 볼 거 없는 블로그가 되어 버린 거죠...얼마 전까지 제 스스로에게 뭐랄까.. 봉인 같은 걸 걸어두었습니다.새로운 일에 적응하는 동안, 당분간은 일에 충실하자라는 생각이었습니다.이제는제 자신에게 상을 줘도 되겠다 싶어서, 조금씩 시간을 투자해볼까 합니다.저와 가까운 분들은 이미 아시겠지만, 저는 현재 N 모 게임사에 근무하고 있습니다.(N으로 시작하는 게임회사가 좀 많으므로 정확하게 어디인지는상상에 맡기겠습니다. ^^)제 입장에서는 정확하게 12~3년전으로의 회귀입니다. 그 때 떠나왔던.......]]></description>
					<pubDate>Fri, 24 Feb 2012 19:16:37 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[세미나 자료]]></category>
					<title><![CDATA[MSDN세미나 동영상 : 개발자와 DBA ORM 분쟁 답은 있는가?]]></title>
					<link>http://blog.naver.com/saltynut/120150997520</link>
					<guid>http://blog.naver.com/saltynut/120150997520</guid>
					<description><![CDATA[작년 11월 29일에 했던 세미나 동영상이 이제야 올라왔네요.Part I -ORM 개요Part II - DBA가 바라본ORMPart III - ORM의 문제 및 해결방안보시고 궁금하거나 필요한 사항이 있으면 제게 요청해주세요. :-)뒤늦은 세미나 후기를남기자면..MSDN 세미나가 오랜만에 부활한데다, 저도 오랜만에 하는 세미나라서 즐거웠습니다.그러다 보니, 사실 세미나를 기획(?)할 때 약간 다음과 같은욕심을 냈었습니다.여러 명의 강사, 그것도 개발자만이 아닌 다른 Role의 사람이 함께진행하는 세미나강사와 참석자가 의견을 주고 받는 인터랙티브한 진행PPT 놀이 세미나가 아닌 Live Coding의 부활!예상대로 쉽지는 않더군요.세미나를 해보신 분들은 아시겠지만.......]]></description>
					<pubDate>Fri, 27 Jan 2012 00:33:52 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,MSDN세미나,ORM]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Notice]]></category>
					<title><![CDATA[MSDN 세미나 - 개발자와 DBA, ORM 분쟁 답은 있는가?]]></title>
					<link>http://blog.naver.com/saltynut/120145917440</link>
					<guid>http://blog.naver.com/saltynut/120145917440</guid>
					<description><![CDATA[드디어 MSDN 세미나가 다시 부활합니다.부족하지만 첫 테이프를 제가 MVP인 김정선님, 이지선님과 같이 함께끊기로 했습니다.그리고 앞으로도 보다 더 좋은 세미나가 계속 이어질 것입니다.&#65279;&#65279;&#65279;&#65279;&#65279;&#65279;&#65279;이번 세미나는 기존의 세미나와는색다른 형식으로 해보려고 합니다. 단순히 준비된프리젠테이션 자료를 읽는 것이 아니라,자유로운 토론과 Live Coding(!)이 등장할 예정입니다. ^^&#65279;이런저런 사정 상 평일 오후에 하게 되었다는 것이 안타깝긴 하나, 어렵게 찾아보신 분들에게 최대한 많은 도움이 될만한 내용을 전달할 수 있도록 노력하겠습니다.         
.......]]></description>
					<pubDate>Thu, 24 Nov 2011 13:19:02 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,MSDN세미나,ORM.EntityFramework]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Notice]]></category>
					<title><![CDATA[프로페셔널 ALM 번역서 출간]]></title>
					<link>http://blog.naver.com/saltynut/120144006581</link>
					<guid>http://blog.naver.com/saltynut/120144006581</guid>
					<description><![CDATA[제가 번역한 것으로 오해하시면 안 됩니다. :-)드원테크놀러지에 계시는 3분(박대식, 박근우, 임승현)이 공동으로 번역하셨습니다.정식 책제목이 좀 깁니다.프로페셔널 ALM: Visual Studio를 이용한 어플리케이션 생명주기 
관리원서를 예전에 잠깐 훑어본 적이 있는데요, 일단 Wrox 책이므로 기본적인 수준은 어느 정도 보장이 되고,전반적으로 TFS의 기능 소개를 위주로 했다는 아쉬움이 있긴 하지만, 옛날에 제가 번역했던 Working with Visual Studio 2005 Team System 이후로는 거의 유일하게나온 책일 겁니다. 당시 TFS 한글판이나 한글 문서가 하나도 없던 상태에서 용어를 정해가면서 엄청나게 고생하던 생각이 나더군요. 어쨌든 저 정.......]]></description>
					<pubDate>Thu, 03 Nov 2011 17:04:25 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,VisualStudio,ALM,TFS]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Tech Stories]]></category>
					<title><![CDATA[Pitfalls of the new technology and version upgrades ]]></title>
					<link>http://blog.naver.com/saltynut/120143721025</link>
					<guid>http://blog.naver.com/saltynut/120143721025</guid>
					<description><![CDATA[NOTE : 이 글은 '새로운 기술과 버전업의함정'의 영문 버전입니다. (This post is english version of my original korean one.) Looking back, I feel as if I’ve spent my last
ten years with .NET. As time went by, I got older and wiser and so did .NET,
going towards 4.X version. However, I came to notice that out of all those
years, I always agonize over same issue repeatedly. During the last few years, I have participated
in the two major projects. The first project, A; was to adopt .NET for the
first time in the industry, and B; was to upgrade and re-build some aspects of
.NET based syst.......]]></description>
					<pubDate>Mon, 31 Oct 2011 16:02:38 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[Feeding My Brain]]></title>
					<link>http://blog.naver.com/saltynut/120142764594</link>
					<guid>http://blog.naver.com/saltynut/120142764594</guid>
					<description><![CDATA[ 별로 궁금하실 분들도 없으시겠지만, 블로그가 너무 휑한 것 같아서 근황이나 적어보려고 합니다. 아시다시피 퇴사 후 오랜만에 가족과 시간을 보냈습니다. 덕분에 이제 딸아이와 많이 친해졌지요. 그 동안 못 만나 뵌 분들도 만나 뵙고 얘기도 나누고 그렇게 보냈습니다.  요즘은 밀린 공부들을 하고 있습니다. 굳이 기술서적 뿐만 아니라, 이것저것 다양한 책들을 읽어보고 있습니다. 인터넷에서 자료 수집하고, 가끔 코드도 끄적거려보고, 그러다 보면 하루가 정말 빨리 갑니다. 제목 그대로 제 머리에 밥 주고 있는 단계라 아직까지 어떻게 공유할 단계가 아닌 것 같지만, 현재 공부하고 있거나 또는 앞으로 공부하려고 하는 분.......]]></description>
					<pubDate>Thu, 20 Oct 2011 11:52:50 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,Azure,Hadoop,NoSQL,AppFabric,DryadLinq,WinRT,Metro,Roslyn,Microsoft]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Tech Stories]]></category>
					<title><![CDATA[새로운 기술과 버전 업의 함정]]></title>
					<link>http://blog.naver.com/saltynut/120141041803</link>
					<guid>http://blog.naver.com/saltynut/120141041803</guid>
					<description><![CDATA[ &#65279;&#65279;어떻게 보면 지난 10년간의 내 생활은 .NET과 함께 해온 것과 마찬가지인 것 같다. 나는 나이를 먹어가고, .NET 역시 이제 4.x 버전을 향해가고 있다. (다행히 아직 내 나이의 앞자리는 4가 아니라는 것에 위안을 삼자!) 그러나, 그렇게 많은 시간이 지나가고 많은 일들이 있었음에도 불구하고 항상 비슷한 문제로 고민하게 된다는 점을 발견했다.  최근 몇 년 동안 나는 두 개의 대규모 프로젝트에 참여했는데, A 프로젝트는 해당 업계 최초로 .NET을 도입하는 것이었고, B 프로젝트는 5년 넘게 운영되어온 .NET 기반 시스템을 업그레이드하고 일부 업무를 재구축하는 것이었다. 흥미롭게도 둘은 성격이 다른 프로젝.......]]></description>
					<pubDate>Fri, 30 Sep 2011 16:26:43 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,변화]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[My Stories]]></category>
					<title><![CDATA[닷넷엑스퍼트를 떠나며..]]></title>
					<link>http://blog.naver.com/saltynut/120139260531</link>
					<guid>http://blog.naver.com/saltynut/120139260531</guid>
					<description><![CDATA[몇 개월만에 쓰는 포스트인데,제목을 보고 깜짝 놀라실 분들이 계실지도 모르겠네요.예, 제목 그대로 8월 말로 닷넷엑스퍼트를 그만두었습니다.2001년 시작할 때가 엊그제 같은데, 벌써 10년 3개월이라는 시간이 흘렀습니다.너무 앞만 보고 달려오다 보니, 어느 순간 제 인생을 되돌아보고 새로운 전환이 필요하겠다는 생각이 들더군요.우선은 그동안 제가 못했던 것들 중에서 가족과 시간을 보내는 것부터 하고 있습니다.미국 여기저기를 돌고 있는데, 지금까지운전한 거리가 1600마일이 넘어가고 있습니다.(미국, 어디까지 가봤니? 실천 중.. ^^)그래도 아빠와 같이 있는 걸 너무나 좋아하는 딸아이를 보면 하나도피곤하지 않습니다. ^^앞으로.......]]></description>
					<pubDate>Fri, 09 Sep 2011 15:35:48 +0900</pubDate>
					<tag><![CDATA[닷넷엑스퍼트,퇴사]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[.NET/CSharp]]></category>
					<title><![CDATA[.NET Reflector 무료버전 만료]]></title>
					<link>http://blog.naver.com/saltynut/120130256770</link>
					<guid>http://blog.naver.com/saltynut/120130256770</guid>
					<description><![CDATA[Written by 안재우(Jaewoo Ahn), 닷넷엑스퍼트(.netXpert)
  
.NET 개발자라면 필수 유틸리티 중 하나인 Reflector에 대해 아실 것입니다.
Reflector가 Redgate라는 회사로 넘어가면서 무료 버전과 상용 버전으로 나누어서 제공을 했는데, 올해 2월 충격적(?)인 뉴스가 나왔습니다. 무료 버전을 중단하고, 상용 버전만 제공하겠다는 것이지요.
저를 포함한 대부분의 사람들이 무료 버전으로도 만족하기에, 상용 버전의 구매는 거의 없었을 듯 한데, 기업 입장에서 수익이 없이 공짜 소프트웨어를 계속해서 유지하는 것이 얼마나 어려운 것인지를 보여주고 있습니다.
   
'그냥 지금 쓰는 거 계속 쓰면 되지'라고 대부분의 분들이 생각하실 텐데요.......]]></description>
					<pubDate>Thu, 19 May 2011 11:58:49 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Windows Phone]]></category>
					<title><![CDATA[Windows Phone - 용어 및 디자인 가이드라인]]></title>
					<link>http://blog.naver.com/saltynut/120128847655</link>
					<guid>http://blog.naver.com/saltynut/120128847655</guid>
					<description><![CDATA[     
     
     Written by 안재우(Jaewoo Ahn), 닷넷엑스퍼트(.netXpert)
  
용어
   일반적인 Application과는 다르기에, WP7에서의 개념이나 용어에 대해서 먼저 익숙해져야겠다. WP7에서의 각 구성 요소들과 이를 일컫는 용어가 다음과 같이 정리되어 있다. 이 그림 한 장으로 설명이 다 되니, 별다르게 설명할 내용이 없다.
      
원본 위치 &lt;http://msdn.microsoft.com/en-us/library/gg680270(v=PandP.11).aspx&gt;  디자인 가이드라인
   과거의 Windows Mobile 시절과는 다르게, Microsoft는 WP7에서 하드웨어뿐만 아니라 소프트웨어에서도 상당히 엄격한 규격을 만들어 놓았다. 실제 WP7의 UI는 당장 딱 보면 멋져.......]]></description>
					<pubDate>Fri, 29 Apr 2011 09:08:34 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Windows Phone]]></category>
					<title><![CDATA[Windows Phone - App Hub 등록]]></title>
					<link>http://blog.naver.com/saltynut/120128826421</link>
					<guid>http://blog.naver.com/saltynut/120128826421</guid>
					<description><![CDATA[     
     
     Written by 안재우(Jaewoo Ahn), 닷넷엑스퍼트(.netXpert)
  
Platform Overview를 보면, 결국 App Hub에 개발회사/개발자가 등록하는 과정이 필요하다는 것을 알 수 있다. App Hub 웹 사이트 : http://create.msdn.com/
   App Hub Getting Started 정보 : http://create.msdn.com/en-us/home/getting_started
  
App Hub에 등록을 위해서는 Microsoft 입장에서 당연한 것이겠지만, Windows Live ID가 있어야 한다. App Hub에 Sign in을 누르고 진행하면 Live 쪽으로 튕겨가면서 뜬금없이 Birthdate와 Country를 물어본다. 눈치껏 알아서 잘 입력들 하시고.. 다시 App Hub로 돌아오면 계정 생성을 하게 되는데, 2.......]]></description>
					<pubDate>Thu, 28 Apr 2011 21:28:50 +0900</pubDate>
					<tag><![CDATA[WindowsPhone,WP7,AppHub]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Windows Phone]]></category>
					<title><![CDATA[Windows Phone - Platform Overview]]></title>
					<link>http://blog.naver.com/saltynut/120128825124</link>
					<guid>http://blog.naver.com/saltynut/120128825124</guid>
					<description><![CDATA[     
     
     Written by 안재우(Jaewoo Ahn), 닷넷엑스퍼트(.netXpert)
  
뻔한
   내용이지만
   개념
   정리를
   위해
   , Application Platform Overview for Windows Phone의 내용을
   간단히
   요약해보겠다.
   
Windows Phone Application Platform 구성요소
   Runtime - On "Screen" : Phone을 구동하는 런타임
   Tools : App 개발을 위한 도구 및 컨텐츠
  Cloud Services : Phone에서 호출하기 위한 각종 온라인 서비스(지도, 알림, 소셜 등등)
  Portal Services : App 등록, 인증, 퍼블리싱, 빌링 등. 이후 설명할 App Hub와 Marketplace가 제공하는 기능들.
  
 
Runtime - On "Screen"
   크게 볼.......]]></description>
					<pubDate>Thu, 28 Apr 2011 21:09:33 +0900</pubDate>
					<tag><![CDATA[WindowsPhone,WP7]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Windows Phone]]></category>
					<title><![CDATA[Windows Phone - WPDT 설치]]></title>
					<link>http://blog.naver.com/saltynut/120128791468</link>
					<guid>http://blog.naver.com/saltynut/120128791468</guid>
					<description><![CDATA[     
     
          
     
     Written by 안재우(Jaewoo Ahn), 닷넷엑스퍼트(.netXpert)
  
Mobile 세상에 나 몰라라 하기도 그렇고, 마침 계기가 있어서 WP7 쪽을 봐야 하는 김에 나도 트렌드에 편승해서 WP7 얘기를 써볼까 한다. 이후의 내용을 보면 알겠지만, 사실 WP7 개발에 대해 직접 손대보는 건 나 역시 처음이다. 기약 없는 또 하나의 시리즈를 시작하게 되는 셈인데, 강좌 따위가 아니라 그냥 나 혼자 Self-Study를 해 가면서 끄적거리는 것이라 보면 되겠다. 끄적거리는 것이 없으면 나도 더 이상 공부를 안하고 있다고 보면 되겠다. 
제대로 된 강좌를 보고 싶으신 분들은 이미 다른 분들께서 예전에 써놓은 것들이 있.......]]></description>
					<pubDate>Thu, 28 Apr 2011 12:55:35 +0900</pubDate>
					<tag><![CDATA[WindowsPhone,WP7]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[WPF]]></category>
					<title><![CDATA[Infragistics 2010.3 xamDataGrid 성능 문제]]></title>
					<link>http://blog.naver.com/saltynut/120128645206</link>
					<guid>http://blog.naver.com/saltynut/120128645206</guid>
					<description><![CDATA[ Written by 안재우(Jaewoo Ahn),
닷넷엑스퍼트(.netXpert)  WPF에서 DataGrid를 사용해야 할 때, 어찌 보면 구조적으로 가장 깔끔하고 WPF스러운 것은 WPF Toolkit에서 제공되었고 이제 .NET 4.0에 기본적으로 포함된 DataGrid이다. 그러나, 현실 세계에서 이런저런 다양한 기능이 요구되기에, 구조적인 깔끔함을 버리고 3rd Party를 택해야 하는 현실이 생긴다.  기존 WinForm에서 DataGrid를 제공하던 업체들 대부분은 이제 WPF용 DataGrid 역시 제공하고 있다. Infragistics,
DevXpress, Telerik, SyncFusion, ComponenetOne 등등…  FarPoint가 예외적인데, 얘네들은 WPF 버전을 제공할 가능성이 없다고 본다. 예.......]]></description>
					<pubDate>Tue, 26 Apr 2011 13:04:46 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,WPF,DataGrid,Infragistics,xamDataGrid]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>saltynut</author>
					<category><![CDATA[Tech Stories]]></category>
					<title><![CDATA[Entity Framework 4.1, MIX 11, 기타 등등]]></title>
					<link>http://blog.naver.com/saltynut/120127885826</link>
					<guid>http://blog.naver.com/saltynut/120127885826</guid>
					<description><![CDATA[     
     
     
 Written by 안재우(Jaewoo Ahn), 닷넷엑스퍼트(.netXpert) 세월이 참 빠르게 흘러갑니다. 볼 건 많은데,시간은 없고..EntityFramework 4.1Entity Framework 4.1이 정식으로 RTW(Release To Web)되었습니다.http://blogs.msdn.com/b/adonet/archive/2011/04/11/ef-4-1-released.aspxVS2010 SP1에 포함될 줄 알았으나 보기좋게 기대를 저버린 녀석이지요. 어찌되건 계속 CTP를 통해 공개를 하고 지속적인 피드백을 받아 왔기에, 지속적인 관심을 가져오신 분들은 뭐가 바뀌는지 다 아실 겁니다. 기존 4.0의 ObjectContext의 상위 래퍼인 DbContext API Set이 추가 되었고, 기존의 Database-First나 Model-First 외에 Code-Fi.......]]></description>
					<pubDate>Thu, 14 Apr 2011 14:18:26 +0900</pubDate>
					<tag><![CDATA[IT·컴퓨터,EF4.1,IE10,Silverlight5,WP7,Mango,Kinect,KinectSDK]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
